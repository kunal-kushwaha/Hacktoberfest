#include<bits/stdc++.h>
#include<string>
using namespace std;

int solve(string S,string V)
  {  
    int m=S.size();
      int n=V.size();
   
         int **dp=new int*[m+1];
         for(int i=0;i<=m;i++)
          dp[i]=new int[n+1];
    
 
     for (int i = 0; i <=m; i++) 
        dp[i][0] = 1; 
  
    // S string is empty 
    for (int i = 1; i <=n; i++) 
        dp[0][i] = 1000; 
    
     for (int i = 1; i <=m; i++) 
    { 
        for (int j = 1; j <= n; j++) 
        { 
            char ch = S[i-1]; 
            int k; 
            for (k = j-1; k >= 0; k--) 
            {   if (V[k] == ch) 
                    break;
            } 
  
            // char not present in v 
                   if (k == -1) 
                    dp[i][j] = 1; 
                      else
               dp[i][j] = min(  dp[i-1][j] ,  dp[i-1][k] + 1 ); 
        } 
    } 
  
    int ans = dp[m][n]; 
   
  
    return ans; 
} 
int main()
{
string abc="abcnidcmor";
string pqr="mclcmoabc";
cout<<solve(abc,pqr);
return 0;
}
  
